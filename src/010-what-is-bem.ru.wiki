=== Что такое БЭМ

##БЭМ## - это подход к web-разработке, который позволяет получить гибкий, легко изменяемый код.

БЭМ решает следующие задачи:

 * разделение кода на логические части
 * единый подход к реализации, во множестве технологий (мультилингвальность)
 * оптимизация выполнения production runtime

==== Разделение кода на логические части
=====Разделение ответственности
Разделение кода на логические составляющие (блоки и их элементы) позволяет разделить
ответственность. Разные части кода страницы могут писать разные люди.\\
Например, один разработчик ответственнен за colorpicker (на всём проекте), другой -
за компонент валидации форм, третий - за подвал сайта и т.д.
=====Использование без погружения
Можно оперировать частями (блоками) без погружения в то, как эти части сделаны. Блоки
реализуются так, что могут работать, будучи вставленными в любое место на странице.
=====Повторное использование
Сложные блоки составляются из простых согласно их логической структуре. Таким образом, каждое
решение подразумевает выделение в коде множества самостоятельных частей. Это повышает
вероятность повторного использования кода.

==== Мультилингвальность
=====Единая предметная область
В web-технологиях финальный продукт состоит из разных технологий (например, HTML, CSS, JS).
БЭМ-методология декларирует единые термины и подходы к реализации во всех применяемых
технологиях.\\
Напрмер, JavaScript-реализации блоков не оперируют понятиями DOM-элементов, а используют
следующий уровень абстрации - ##БЭМ-дерево##.
=====Технологии реализации
Картинки и документация - это тоже технологии реализации блока.

====Оптимизация выполнения production runtime
=====Использовать только нужное
Благодаря сборке страниц из блоков, в runtime попадают только действительно используемые части.
Не нужно грузить лишний, неиспользуемый код.
=====Браузер как assembler
Код, который пишет человек и код, который попадает в браузер - это не одно и то же. Первый устроен так,
как удобно разрабатывать. Второй, благодаря компиляционным преобразованиям, сделан подходящим для
браузера. Например, для разных браузеров можно генерировать разный код, оптимизированный конкретно для них.
=====Послойная структура
Разделение слоёв "код для человека" и "код для браузера" позволяет не менять код приложения в целях
оптимизации, а улучшать "компилятор", который генерирует код для браузера из БЭМ-сущностей.
