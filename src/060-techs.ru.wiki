=== Технологии реализации

БЭМ-метод подразумевает реализацию блока в различных технологиях.

%%html
    <img src="/bem-method/images/levels.tech.png" alt="Level can include different techs"/>
%%

==== HTML

Реализация возможна в нескольких вариантах.

http://clubs.ya.ru/bem/replies.xml?item_no=712

===== Тэги HTML и классы

В HTML-е каждая БЭМ-сущность определяется тегом и своим классом или классами.

%%hl xml
    <div class="block-name">
        <i class="block-name__elem"></i>
        ...
    </div>
    <div class="block-name block-name_modifier">...</div>
%%

===== Кастомные тэги

Можно пойти дальше и сократить использование классов, заменив теги по умолчанию на кастомные.

%%hl xml
    <copyright>
        <copyright-elem>...</copyright-elem>
        ...
    </copyright>
    <copyright class="block-name_modifier">...</copyright>
%%

==== CSS

Каждая БЭМ-сущность должна иметь класс, чтобы при необходимости изменить или дописать или переопредлить для них CSS-свойства.

Опираясь на то, что любой блок, возможно, придется использовать повторно, т.е.
блок не является уникальным, CSS-свойства для блоков и его елементов описываются только через классы.

**Важно**: CSS-свойства не описываются через ##id##, а именно вот так *НЕ ПИШЕМ*:
%%hl xml
    #header {}
%%

CSS-классы для БЭМ-сущностей соответствуют полным именам этих сущностей\\
См. [соглашение об именовании](#naming)

**Примеры именования CSS-классов**

%%hl xml
 .b-popup {}                 // CSS-класс блока
 .b-popup__content {}        // CSS-класс элемента блока
 .b-popupa_theme_yellow {}   // CSS-класс модификатора блока
%%

По возможности отказываемся от ((http://www.w3.org/TR/css3-selectors/#type-selectors Селекторов типа)). Селекторы типа — селекторы, которые применяются к ##DOM##-узлам без ##CSS##-класса (элементо-зависимые селекторы).

**Например**, вот так **НЕ ПИШЕМ**:

%%hl xml
    p
    {
    	color: #ccc;
    }

    table.news td
    {
    	border-bottom: 1px solid #ccc;
    }

    .list li
    {
    	float: left;
    }
%%

Отказ от использования Селекторов типа и ##CSS##-каскада уменьшает ##Reflow Time## — чистое время
наложения стилей на сформированный ##DOM##.\\ ((http://clubs.ya.ru/bem/replies.xml?item_no=712 Ссылка на запись с более подробным описанием))

==== JavaScript

В ##JS## мы также работаем в терминах "Блок-Элемент-Модификатор".
##DOM##-представление блоков рассматривается как более низкий уровень реализации.\\
Допустимы блоки без ##DOM##-представления. Обычно это блоки-хелперы.

**Пример блоков без ##DOM##-представления:**

%%hl xml
    i-request                // Конструктор запросов
    i-request_type_ajax      //Конструктор AJAX-запросов
%%

Клиентским JS-фреймворком для работы со страницей в терминах БЭМ является
JS-реализация блока ##i-bem## библиотеки ##bem-bl##:

 * ((https://github.com/bem/bem-bl/tree/master/blocks-common/i-bem код в репозитории на GitHub))
 * ((https://github.com/bem/bem-bl/ библиотека блоков bem-bl)).
 * ((http://clubs.ya.ru/bem/replies.xml?item_no=900 Доклад Дмитрия Филатова и Сергея Бережного об i-bem.js))

==== Шаблоны

Одной из реализаций блока может быть его шаблон, который по входным данным строит HTML.

В бибилиотеке ##bem-bl## в качестве шаблонной технологии используется ##bemhtml##.
Это надмножество JS-шаблонизатора xjst, написанные на нём шаблоны блоков компилируются
в JavaScript и могут быть выполнены как на сервере (через Node.js), так и на клиенте (браузере).

 * ((http://clubs.ya.ru/bem/replies.xml?item_no=898 Доклад Сергея Бережного (veged) bemhtml))
 * ((http://clubs.ya.ru/bem/replies.xml?item_no=899 Доклад Андрея Мищенко (druxa) и Сергея Бережного (veged) об xjst))
